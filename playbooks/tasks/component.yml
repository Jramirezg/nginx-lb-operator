---

    # The name space should be that of the current resource, or that of the component
    # nginx_lb_namespace is set when a component update is triggered from a Deployment
    - name: Set the nginx_lb Namespace
      set_fact:
        nginx_lb_namespace: "{{ nginx_lb_namespace | default( meta.namespace ) }}"

    - name: Fail when ingressType is not set properly
      fail:
        msg: "You must set ingressType to one of 'Route|Service|None'"
      when: ( spec.ingressType is undefined ) or (
            ( spec.ingressType | lower != "route" ) and
            ( spec.ingressType | lower != "service" ) and
            ( spec.ingressType | lower != "none" ))

    # Build the node list when the ingressType is route or service
    - name: Get the Nodes
      include_tasks: component_nodes.yml
      when: ( spec.ingressType | lower == "route" ) or
            ( spec.ingressType | lower == "service" )

    - name: set the gatewayRefs
      set_fact:
        spec: "{{ spec | default({}) | combine( { 'desiredState': { 'ingress':{ 'gatewayRefs': [ { 'ref': '/services/environments/' ~ nginx_controller_environmentName ~ '/gateways/' ~ nginx_lb_namespace ~ '.' ~ spec.gateway } ] }}}, recursive=True) }}"

    - name: Dump the final spec
      debug:
        msg: "{{ spec }}"
      when: ansible_verbosity > 2

    - name: Send the configuration to controller
      include_role:
        name: nginxinc.nginx_controller.nginx_controller_component
      vars:
        nginx_controller_appName: "{{ nginx_lb_namespace ~ '.' ~ spec.application }}"
        nginx_controller_component:
          metadata:
            name: "{{ ansible_operator_component_name | default( ansible_operator_meta.name ) }}"
            displayName: "{{ spec.displayName | default( component_name | default(ansible_operator_meta.name) ) }}"
            description: "{{ spec.description | default('Managed by NGINX-lb-operator') }}"
          desiredState: "{{ spec.desiredState | default({}) }}"

...

